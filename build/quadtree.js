/*! KdAndQuadTreesDemo 2020-05-07 */
define(["geom"],function(a){function b(a,e,f,g,h){var i,j,k,l,m,n,o,p=[];for(void 0===f&&(f=0,g=[d/2,d/2],h=d),this.depth=f,this.size=h,this.centre=g,i=0;i<a.length;i++)l=a[i],l[0]>=g[0]-h/2&&l[0]<g[0]+h/2&&l[1]>=g[1]-h/2&&l[1]<g[1]+h/2&&p.push(l);if(p.length<=c||f>=e)this.is_leaf=!0,this.points=p;else for(this.is_leaf=!1,this.children=[],m=h/4,j=-1;j<2;j+=2)for(k=-1;k<2;k+=2)n=[g[0]+j*m,g[1]+k*m],o=new b(p,e,f+1,n,h/2),this.children.push(o)}const c=2,d=100;return b.prototype.lines=function(){var a,b,c,d,e,f,g,h,i;if(this.is_leaf)a=[];else for(b=this.size/2,g=this.centre[0],h=this.centre[1],c=h+b,d=g-b,e=h-b,f=g+b,a=[{points:[[d,h],[f,h]]},{points:[[g,e],[g,c]]}],i=0;i<4;i++)a=a.concat(this.children[i].lines());return a},b.prototype.numLeaves=function(){var a,b=0;if(this.is_leaf)return 1;for(a=0;a<4;a++)b+=this.children[a].numLeaves();return b},b.prototype.maxLeafDepth=function(){var a,b;if(this.is_leaf)return 0;for(b=0,a=0;a<4;a++)b=Math.max(b,this.children[a].maxLeafDepth());return 1+b},b});